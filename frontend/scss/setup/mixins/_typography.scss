// ####################################################
// Font setup mixins
//
// Use the serif/sans-serif mixins directly in the SCSS do any responsive overwrites
// with within the breakpoint mixin e.g.

@mixin font-regular() {
  font-size:15px;
}

@mixin font-small() {
  font-size:13px;
}

@mixin font-tiny() {
  font-size:11px;
}


@mixin sans-serif($font-size:15, $line-height:20, $weight:normal, $style:normal) {
  font-family: $sans-serif;

  font-size: $font-size * 1px;
  line-height: $line-height * 1px;
  font-weight: $weight;
  font-style: $style;

  /* .js-sans-loaded & {
    font-family: $sans-serif--loaded;
  } */
}


/*
  @mixin font_smoothing

  Set font smoothing ON or OFF
*/
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}


/*
  @mixin text-underline

  Inserts vendor prefixed box shadows

  Parameters:
  $off - color
  $on - color for hover
  $pos - vertical position
*/
@mixin text-underline($pos: 14,$off: $color__white,$on: $color__black--93) {
  text-decoration: none;
  background: {
    image: linear-gradient(to bottom, rgba($off, 0) 50%, rgba($off, 1) 50%);
    repeat: repeat-x;
    size: 2px 2px;
    position: 0 $pos*1px;
  }
  // to draw the lines below the regular height of the box...
  //padding-bottom: 3px;
  //margin-bottom: -3px;

  &:hover,
  &:focus {
    background-image: linear-gradient(to bottom, rgba($on, 0) 50%, rgba($on, 1) 50%);
  }
}


/*
  @mixin hide_text

  Hides text in an element
*/

@mixin hide-text() {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  overflow: hidden;
  text-indent: -100%;
}


@mixin monospaced-figures($value: on) {
  @if $value == on {
    font-feature-settings: 'kern', 'tnum';
  } @else {
    font-feature-settings: 'kern';
  }
}


/*
    @mixin bordered
*/

@mixin bordered($bordered__color: $color__text , $bordered__color--hover: $color__text, $vertical__position: 98%) {

  $bordered__color--opacity: rgba($bordered__color, 0.75);

  text-decoration: none;
  background-image: linear-gradient(to bottom, #{$bordered__color--opacity} 75%, #{$bordered__color--opacity} 75%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 $vertical__position;

  @if $bordered__color--hover != false {
    &:hover {
      background-image: linear-gradient(to bottom, #{$bordered__color--hover} 75%, #{$bordered__color--hover} 75%);
    }
  }
}
